%{
	#include <stdio.h>
	#include <stdlib.h>
	void yyerror(char *msg);
	extern int value[];
%}
%token NUM ID
%%
SS: SS S
  | S
  ;
S : A ';'		{printf ("Answer of expression is %d\n",$1); }
A : ID '=' A   		{value[$1]=$3; $$=$3;} 
| E | R1 | R2 | R3 | R4 | R5 {$$ = $1;}										
    ;
R1: F '=''=' F		{if($1==$4) {printf("1\n");} else {printf("0\n");};}
;
R2: F '>''=' F		{if($1>=$4) {printf("1\n");} else {printf("0\n");};}
;
R3: F '<''=' F		{if($1<=$4) {printf("1\n");} else {printf("0\n");};}
;
R4: F '<' F		{if($1<$3) {printf("1\n");} else {printf("0\n");};}
;
R5: F '>' F		{if($1>$3) {printf("1\n");} else {printf("0\n");};}
;
E : E '+' T		{$$ = $1 + $3;}
  | E '-' T		{$$ = $1 - $3;}
  | T			{$$ = $1;}										
  ;
T : T '*' F		{$$ = $1 * $3;}
  | T '/' F		{$$ = $1 / $3;}
  | F			{$$ = $1;}
  ;
F : NUM		{$$ = $1;}
  | ID 		{printf("A=%d\n",value[$1]);$$= value[$1];}
  | '(' E ')'		{$$ = $2;}
  ;
%%
void yyerror(char *msg)
{
	printf("%s\n",msg);
}

int main()
{

yyparse();
return 0;
}

